# Generated by Chef for <%= node['hostname'] %> (nginx version: <%= node['nginx']['version'] %>)
#
# Local modifications will be overwritten.
#
# redirect http to https.
server {
  listen <%= @params[:port] %>;
  server_name <%= @params[:server_name].nil? ? node['hostname'] : @params[:server_name] %>;
  root <%= @params[:docroot] %>;
  index index.php;
  client_max_body_size 1000M;
  fastcgi_buffers 64 4K;

  access_log <%= node['nginx']['log_dir'] %>/<%= @params[:name] %>-access.log combined;
  error_log  <%= node['nginx']['log_dir'] %>/<%= @params[:name] %>-error.log;

  rewrite ^/caldav(.*)$ /remote.php/caldav$1 redirect;
  rewrite ^/carddav(.*)$ /remote.php/carddav$1 redirect;
  rewrite ^/webdav(.*)$ /remote.php/webdav$1 redirect;


  location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
  }

# deny direct access
  location ~ ^/(data|config|\.ht|db_structure\.xml|README) {
    deny all;
  }

# default try order
  location / {
    rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
    rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;

    rewrite ^/.well-known/carddav /remote.php/carddav/ redirect;
    rewrite ^/.well-known/caldav /remote.php/caldav/ redirect;

    rewrite ^(/core/doc/[^\/]+/)$ $1/index.html;

    try_files $uri $uri/ index.php;
  }

# owncloud WebDAV
  location @webdav {
    fastcgi_split_path_info ^(.+\.php)(/.*)$;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_pass unix:/var/run/php-fpm-owncloud.sock;
    include fastcgi_params;
  }

# enable php
  location ~ ^(.+?\.php)(/.*)?$ {
    try_files $1 = 404;

    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$1;
    fastcgi_param PATH_INFO $2;
    fastcgi_pass unix:/var/run/php-fpm-owncloud.sock;
  }

  location ~* ^.+\.(jpg|jpeg|gif|bmp|ico|png|css|js|swf)$ {
    expires 30d;
# Optional: Don't log access to assets
    access_log off;
  }

}
